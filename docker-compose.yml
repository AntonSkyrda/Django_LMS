version: '3.9'

services:
  backend:
    build: .
    container_name: django_app
    command: ["gunicorn", "lms.wsgi:application", "--bind", "0.0.0.0:8000"]
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - db
    env_file:
      - .env
    restart: always

  frontend:
    build: ./client
    container_name: react_app
    volumes:
      - frontend_build:/usr/share/nginx/html
    restart: always

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    build: ./nginx
    container_name: nginx_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/http.conf:/etc/nginx/conf.d/http.conf:ro
      - ./nginx/templates/https.conf:/etc/nginx/templates/https.conf:ro
      - frontend_build:/usr/share/nginx/html
      - static_volume:/app/static
      - media_volume:/app/media
      - ./certbot/etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - backend
      - frontend
    restart: always
    entrypoint: ["/entrypoint.sh"]

volumes:
  postgres_data:
  static_volume:
  media_volume:
  frontend_build:
